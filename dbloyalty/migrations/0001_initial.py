# Generated by Django 3.2.3 on 2021-05-14 07:44

from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True, verbose_name='Телефон')),
                ('first_name', models.CharField(blank=True, max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=50, verbose_name='Фамилия')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='День рождения')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Электронная почта')),
                ('total_points', models.IntegerField(default=0, verbose_name='Накопленные баллы')),
                ('points_for_payment', models.IntegerField(default=0, verbose_name='Количество баллов для оплаты')),
            ],
            options={
                'verbose_name': 'Член программы лояльности',
                'verbose_name_plural': 'Члены программы лояльности',
                'ordering': ('last_name', 'first_name'),
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='Название проекта')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_id', models.TextField(blank=True, max_length=11, verbose_name='Номер заказа')),
                ('points', models.IntegerField(default=0, verbose_name='Количество баллов')),
                ('transaction_type', models.IntegerField(choices=[(1, 'Начисление баллов'), (2, 'Списание баллов'), (3, 'Установка статуса')], default=1, verbose_name='Тип транзакции')),
                ('transaction_status', models.IntegerField(choices=[(1, 'Открытая'), (2, 'Закрытая')], default=1, verbose_name='Статус транзакции')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='dbloyalty.member')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250, verbose_name='Название статуса')),
                ('points_to_receive', models.PositiveIntegerField(verbose_name='Баллы для получения')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dbloyalty.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Статус',
                'verbose_name_plural': 'Статусы',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250, verbose_name='Название правила')),
                ('rule_type', models.CharField(choices=[('HP', 'Приветственные баллы'), ('PP', 'Баллы за покупку')], default='PP', max_length=2, verbose_name='Тип правила')),
                ('points_to_add', models.IntegerField(default=0, verbose_name='Баллы для начисления')),
                ('purchase_percentage', models.IntegerField(default=0, verbose_name='Процент от покупки')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='dbloyalty.status', verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Правило начисления баллов',
                'verbose_name_plural': 'Правила начисления баллов',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='member',
            name='statuses',
            field=models.ManyToManyField(related_name='members', to='dbloyalty.Status', verbose_name='Статусы'),
        ),
    ]
